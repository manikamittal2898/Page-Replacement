/* MANIKA MITTAL
1710110202

*/
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.Toolkit;
 import javax.swing.*;
import java.awt.event.*;
import java.util.*;

public class Gla2  implements ActionListener{
    Font font= new Font("Comic Sans MS", Font.PLAIN, 24);
     JFrame f1= new JFrame("Page Replacement Techniques");
    JLabel lab1= new JLabel("Number of frames (3-7)         ");
   
    Integer arr[]= {1,2,3,4,5,6,7};
    JComboBox cb= new JComboBox(arr); 
  JLabel lab2= new JLabel("Reference String        ");
  JTextField tf2= new JTextField("7,0,1,2,0,3,0,4,3,0,3 (Sample Reference String, use the same format)",150);
  
  
    JButton jb= new JButton("Compute");
    JPanel p1= new JPanel();
    JPanel p2= new JPanel();
    JPanel p3= new JPanel();
    JPanel p4= new JPanel();
    JPanel p5= new JPanel();
    JPanel p6= new JPanel();
    JPanel p7= new JPanel();
    JPanel p8= new JPanel();
    JPanel p9= new JPanel();

    
    Integer s1;
    
     
 Gla2() 
 { 
     
  jb.addActionListener(this);
 lab1.setFont(font);
  lab2.setFont(font);
   cb.setFont(font);
    tf2.setFont(font);
     jb.setFont(font);
p1.setLayout(new FlowLayout(FlowLayout.LEFT));
p2.setLayout(new FlowLayout(FlowLayout.LEFT));
p3.setLayout(new FlowLayout(FlowLayout.CENTER));
p4.setLayout(new FlowLayout(FlowLayout.LEFT));
p5.setLayout(new FlowLayout(FlowLayout.LEFT));
p6.setLayout(new FlowLayout(FlowLayout.LEFT));
p7.setLayout(new FlowLayout(FlowLayout.LEFT));
p8.setLayout(new FlowLayout(FlowLayout.LEFT));
p9.setLayout(new FlowLayout(FlowLayout.LEFT));


p1.add(lab1);
p1.add(cb);
p2.add(lab2);
p2.add(tf2);
p3.add(jb);
f1.add(p1);
f1.add(p2);
f1.add(p3);


       Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
      f1.setBounds(0,0,screenSize.width, screenSize.height);
        
        f1.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        f1.setVisible(true);
        f1.setLayout( new GridLayout(12,1));
        f1.setVisible(true);
     
        
 }
    public static void  main(String args[])
    {
        Gla2 obja= new Gla2();  
    }


    @Override
    public void actionPerformed(ActionEvent ae) {
       
     s1= (Integer) cb.getSelectedItem();
     String s2= tf2.getText();
     char ch;
     s2= s2+",";
   
     JTable jtab1, jtab2, jtab3;
     int i,j,k;
     int x=0;
     int pfctr1=1, pfctr2=1, pfctr3=1;
     int d;
     boolean flag=false;
     String arr[]= new String[s2.length()/2];
     String s="";
     String rev="";
     for(i=0;i<arr.length;i++)
     { 
        s+= s2.charAt(x)+""; 
       arr[i]= s2.charAt(x)+""; 
       x+=2;
     }
     for(i=arr.length-1;i>=0;i--)
     rev+=arr[i];
     
     
      String data1[][]= new String[s1][arr.length];
      String data2[][]= new String[s1][arr.length];
      String data3[][]= new String[s1][arr.length];
      for(i=0;i<s1;i++)
      {
          for(j=0;j<arr.length;j++)
          {
              data1[i][j]= "NULL";
          }
      }
       for(i=0;i<s1;i++)
      {
          for(j=0;j<arr.length;j++)
          {
              data2[i][j]= "NULL";
          }
      }

        for(i=0;i<s1;i++)
      {
          for(j=0;j<arr.length;j++)
          {
              data3[i][j]= "NULL";
          }
      }
       
      x=1;
        data1[0][0]=arr[0];
        for(j=1;j<arr.length;j++)
        {
            flag=false;
            for(k=0;k<s1;k++)
            {
                if((data1[k][j-1]).equals(arr[j]))
                {
                    flag= true;
                    break;
                }
            }
            for(k=0;k<s1;k++)
            {
                data1[k][j]= data1[k][j-1];
                
            }
            if(flag==false && x<s1)
            {
                data1[x][j]= arr[j];
                ++pfctr1;
                ++x;
                if(x>=s1)
                    x=0;
            }
        }
        
   
        data2[0][0]=arr[0];
        int used[]= new int [s1];
       
        for(j=1;j<arr.length;j++)
        {  
         
            flag=false;
            for(k=0;k<s1;k++){
                if(arr[j].equals(data2[k][j-1]))
                {
                    flag=true;
                    break;
                }
            }
            for(k=0;k<s1;k++)
            
                data2[k][j]=data2[k][j-1];
            
            if(flag==true)
               continue;
            
            for(k=0;k<s1;k++){
                if(data2[k][j].equals("NULL")){
                    data2[k][j]=arr[j];
                    flag=true;
                    pfctr2++;
                    break;}
            }
            if(flag==true)
            continue;
            
            String temp=s.substring(j);
            for(k=0;k<s1;k++)
                used[k]=temp.indexOf(data2[k][j]);
            int max=0;
            for(k=0;k<s1;k++)
            {
                if(used[k]>used[max])
                    max=k;
                if(used[k]==-1){
                    data2[k][j]=arr[j];
                pfctr2++;
                flag=true;
                break;
            }
        }
        if(flag==true)
            continue;
        data2[max][j]=arr[j];
        pfctr2++;
        }
        
       
        
         
         int  min=0;
        data3[0][0]=arr[0];
        int used2[]= new int[s1];
         
       
        for(j=1;j<arr.length;j++)
        {  
         
            flag=false;
            for(k=0;k<s1;k++){
                if(arr[j].equals(data3[k][j-1]))
                {
                    flag=true;
                    break;
                }
            }
            for(k=0;k<s1;k++)
            {
                data3[k][j]=data3[k][j-1];
            }
            if(flag==true)
            {
               continue;
            }
            for(k=0;k<s1;k++){
                if(data3[k][j].equals("NULL")){
                    data3[k][j]=arr[j];
                    flag=true;
                    pfctr3++;
                    break;}
            }
            if(flag==true)
            continue;
            
            String temp=s.substring(0,j+1);
            
            for(k=0;k<s1;k++){
                used2[k]=temp.lastIndexOf(data3[k][j]);
           
            }
            min=0;
            for(k=0;k<s1;k++)
            {
                if(used2[k]<used2[min])
                    min=k;
               
            }
        
        
        data3[min][j]=arr[j];
        pfctr3++;
        }
        
        
        
        
       
        
       JLabel lab3= new JLabel ("First in First Out        Page faults= "+pfctr1);
       JLabel lab4= new JLabel ("Optimal Page Replacement Technique        Page faults= "+pfctr2);
       JLabel lab5= new JLabel ("Least Recently Used        Page faults= "+pfctr3);
       
   jtab1= new JTable(data1, arr );
   jtab1.setBounds(50,50,100,2000);
   jtab2= new JTable(data2, arr );
   jtab2.setBounds(50,50,100,2000);
   jtab3= new JTable(data3, arr );
   jtab3.setBounds(50,50,100,20000);
   JScrollPane sp1= new JScrollPane(jtab1);
   JScrollPane sp2= new JScrollPane(jtab2);
   JScrollPane sp3= new JScrollPane(jtab3);
    lab3.setFont(font);
    lab4.setFont(font);
    lab5.setFont(font);
     
     
   
   p4.add(lab3);
   p5.add(sp1);
   p6.add(lab4);
   p7.add(sp2);
   p8.add(lab5);
   p9.add(sp3);
   f1.add(p4);
   f1.add(sp1);
   f1.add(p6);
   f1.add(sp2);
   f1.add(p8);
   f1.add(sp3);
}
}
           
  


